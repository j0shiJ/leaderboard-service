// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/submit": {
            "post": {
                "summary": "Submit score",
                "description": "Submit a new score for the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubmitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/SubmitResponse"
                        }
                    }
                }
            }
        },
        "/get_rank": {
            "get": {
                "summary": "Get rank",
                "description": "Fetch the rank of a user",
                "parameters": [
                    {
                        "in": "query",
                        "name": "user_name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "scope",
                        "description": "Ranking scope (state, country, global)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/RankResponse"
                        }
                    }
                }
            }
        },
        "/list_top_n": {
            "get": {
                "summary": "List top N",
                "description": "Fetch the top N ranks",
                "parameters": [
                    {
                        "in": "query",
                        "name": "n",
                        "description": "Number of top ranks to fetch",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "in": "query",
                        "name": "scope",
                        "description": "Ranking scope (state, country, global)",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/TopNResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "SubmitRequest": {
            "type": "object",
            "properties": {
                "user_name": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "score": {
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "SubmitResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "RankResponse": {
            "type": "object",
            "properties": {
                "user_name": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "scope": {
                    "type": "string"
                }
            }
        },
        "TopNResponse": {
            "type": "object",
            "properties": {
                "top_n": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "user_name": {
                                "type": "string"
                            },
                            "rank": {
                                "type": "integer"
                            },
                            "score": {
                                "type": "number",
                                "format": "float"
                            }
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Leaderboard API",
	Description:      "This is a leaderboard service API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
